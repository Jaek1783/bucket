{"version":3,"sources":["firebase.js","Bucket.jsx","store.js","List.js","Detail.js","Progress.js","App.js","index.js"],"names":["initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","db","getFirestore","initState","list","middlewares","thunk","rootReducer","combineReducers","Bucket","state","action","type","new_list","bucket","map","l","idx","bucket_index","completed","filter","bucketStore","enhancer","applyMiddleware","store","createStore","List","dispatch","useDispatch","data","useSelector","navigate","useNavigate","MyUl","index","StyledList","onClick","text","StyledButton","styled","ul","button","p","props","Detail","params","useParams","list_data","Progress","count","b","Container","View","width","length","Dot","div","App","useEffect","getDocs","collection","bucket_data","bucket_list","forEach","doc","console","log","myRef","useRef","addList","value","current","className","InputStyle","ref","path","element","ButtonStyled","window","scrollTo","top","left","behavior","rootElement","document","getElementById","createRoot","render","Store"],"mappings":"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","file":"static/js/main.448532cc.chunk.js","sourcesContent":["// Import the functions you need from the SDKs you need\nimport { initializeApp } from \"firebase/app\";\nimport { getFirestore } from \"firebase/firestore\";\n// TODO: Add SDKs for Firebase products that you want to use\n// https://firebase.google.com/docs/web/setup#available-libraries\n\n// Your web app's Firebase configuration\n// For Firebase JS SDK v7.20.0 and later, measurementId is optional\nconst firebaseConfig = {\n  apiKey: \"AIzaSyA164JgPTgcAXiHvSiABj-E1cg4I-O42Uo\",\n  authDomain: \"my-portfolio-ed3e0.firebaseapp.com\",\n  projectId: \"my-portfolio-ed3e0\",\n  storageBucket: \"my-portfolio-ed3e0.appspot.com\",\n  messagingSenderId: \"550988259321\",\n  appId: \"1:550988259321:web:f55120553fc4b4b2e2a728\",\n  measurementId: \"G-W836BGF05L\"\n};\ninitializeApp(firebaseConfig);\n// Initialize Firebase\nexport const db = getFirestore();","// bucket.js\nimport { db  } from \"./firebase\";\nimport { collection, getDocs, addDoc, updateDoc, doc, deleteDoc } from \"firebase/firestore\";\nconst initState = {\n  list: [\n    // { text: \"혼자 여행 하기\", completed: \"false\" },\n    // { text: \"해외 여행 하기\", completed: \"false\" },\n    // { text: \"고양이 키우기\", completed: \"false\" }\n  ]\n};\n// Actions\nconst LOAD = \"bucket/LOAD\";\nconst CREATE = \"bucket/CREATE\";\nconst COMPLETE = \"bucket/COMPLETE\";\nconst DELETE = \"bucket/DELETE\";\n\n// Action Creators\nexport function createBucket(bucket) {\n  return { type: CREATE, bucket: bucket };\n}\nexport function completeBucket(bucket_index) {\n  return { type: COMPLETE, bucket_index };\n}\nexport function deleteBucket(bucket_index) {\n  return { type: DELETE, bucket_index };\n}\nexport function loadBucket (bucketStore){\n  return{type:LOAD, bucketStore};\n}\n\nexport const bucketFirebase = ()=>{\n  return async function (dispatch){\n    const bucket_data = await getDocs(collection(db, \"bucket\"));\n    // console.log(bucket_data);\n    let bucket_list = [];\n    bucket_data.forEach((doc)=>{\n      bucket_list = [...bucket_list, {...doc.data()}]\n      // bucket_list.push({...doc.data()});\n    });\n    console.log(bucket_list);\n    dispatch(loadBucket(bucket_list));\n  }\n}\n// Reducer\nexport default function reducer(state = initState, action = {}) {\n  switch (action.type) {\n    // do reducer stuff\n    case \"bucket/CREATE\": {\n      const new_list = [...state.list, action.bucket];\n      return { list: new_list };\n    }\n    case \"bucket/COMPLETE\": {\n      const new_list = state.list.map((l, idx) => {\n        // console.log(l);\n        // console.log(action.bucket_index !== idx, action.bucket_index, idx);\n        if (action.bucket_index === idx) {\n          return { ...l, completed: \"true\" };\n        } else {\n          return l;\n        }\n      });\n      return { list: new_list };\n    }\n    case \"bucket/DELETE\": {\n      const new_list = state.list.filter((l, idx) => {\n        // console.log(action.bucket_index !== idx, action.bucket_index, idx);\n        return action.bucket_index !== idx;\n      });\n      return { list: new_list };\n    }\n    case \"bucket/LOAD\":{\n      return {list: action.bucketStore}\n    }\n    default:\n      return state;\n  }\n}\n","import { createStore, combineReducers,applyMiddleware, compose } from \"redux\";\nimport Bucket from \"./Bucket\";\nimport thunk from \"redux-thunk\";\n\nconst middlewares=[thunk];\nconst rootReducer = combineReducers({ Bucket });\nconst enhancer = applyMiddleware(...middlewares);\nconst store = createStore(rootReducer, enhancer);\n\nexport default store;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { useNavigate } from \"react-router-dom\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { completeBucket, deleteBucket } from \"./Bucket\";\n\n\nconst List =() => {\n  const dispatch = useDispatch();\n  const data = useSelector((state) => state.Bucket.list);\n  let navigate = useNavigate();\n  // console.log(doc.data());\n  return (\n    <MyUl>\n      {data.map((list, index) => {\n        return (\n          <li key={index}>\n            <StyledList\n              completed={list.completed}\n              onClick={() => {navigate(`/detail/` + index);\n            }}>{list.text}</StyledList>\n            <StyledButton\n              onClick={() => {\n                dispatch(deleteBucket(index));\n              }}\n            >\n              삭제\n            </StyledButton>\n            <StyledButton\n              onClick={() => {\n                dispatch(completeBucket(index));\n              }}\n            >\n              완료\n            </StyledButton>\n          </li>\n        );\n      })}\n    </MyUl>\n  );\n};\nexport default List;\n\nconst MyUl = styled.ul`\n  margin: 0;\n  display: flex;\n  flex-direction: column-reverse;\n  li {\n    display: flex;\n    justify-content: space-evenly;\n    border-bottom: 1px solid #ccc;\n    margin: 0;\n    margin-bottom: 1em;\n    padding: 1em;\n    font-size: 0.9em;\n    list-style-type: none;\n    text-align: left;\n  }\n`;\n\nconst StyledButton = styled.button`\n  background-color: #fff;\n  border: none;\n  border-right: 1px solid #ccc;\n  border-bottom: 1px solid #ccc;\n  margin-left: 5px;\n  padding: 5px;\n  border-radius: 15px;\n  :active {\n    border: none;\n    border-top: 1px solid #ccc;\n    border-left: 1px solid #ccc;\n  }\n`;\n\nconst StyledList = styled.p`\n  cursor: pointer;\n  width: 80%;\n  height: 2rem;\n  text-align: center;\n  background-color: ${(props) =>\n    props.completed === \"true\" ? \"skyblue\" : \"antiquewhite\"};\n  color: ${(props) => (props.completed === \"true\" ? \"#fff\" : \"#000\")};\n  line-height: 2rem;\n  font-size: 1rem;\n`;\n","import React from \"react\";\nimport { useNavigate, useParams } from \"react-router-dom\";\nimport { useSelector } from \"react-redux\";\nconst Detail = (props) => {\n  const params = useParams();\n  const list_data = useSelector((state) => state.Bucket.list);\n  let navigate = useNavigate();\n  return (\n    <div>\n      <p>{list_data[params.index].text}</p>\n      <button\n        onClick={() => {\n          navigate(`/`);\n        }}\n      >\n        처음으로\n      </button>\n    </div>\n  );\n};\nexport default Detail;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { useSelector } from \"react-redux\";\nconst Progress = () => {\n  const data = useSelector((state) => state.Bucket.list);\n  let count = 0;\n  data.map((b) => {\n    if (b.completed === \"true\") {\n      count++;\n    }\n  });\n  return (\n    <Container>\n      <View width={(count / data.length) * 100 + \"%\"}></View>\n      <Dot></Dot>\n    </Container>\n  );\n};\nexport default Progress;\n\nconst Container = styled.div`\n  width: 90%;\n  margin: 0 auto 1rem;\n  height: 15px;\n  border-radius: 15px;\n  background: #fdfdfd;\n  display: flex;\n`;\nconst View = styled.div`\n  transition: 0.5s ease-in-out;\n  width: ${(props) => props.width};\n  height: 15px;\n  background-color: skyblue;\n`;\nconst Dot = styled.div`\n  display: block;\n  width: 20px;\n  height: 20px;\n  border-radius: 50%;\n  border: 3px solid skyblue;\n  margin: -5px -5px -5px -10px;\n  background-color: #fff;\n`;\n","import \"./styles.css\";\nimport List from \"./List\";\nimport React, { useRef,useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport { Route, Routes } from \"react-router-dom\";\nimport { useDispatch } from \"react-redux\";\nimport Detail from \"./Detail\";\nimport Progress from \"./Progress\";\nimport { createBucket,bucketFirebase } from \"./Bucket\";\n\nexport default function App() {\n  // useEffect(async()=>{\n\n  // },[]);\n  // useEffect(async()=>{\n    // firebase CRUD\n\n  // firebase Create\n\n    // console.log(db);\n    // addDoc(collection(db, \"bucket\"),{text:\"new\",completed:\"false\"});\n\n  // firebase Read\n\n    //   const query = await getDocs(collection(db,\"bucket\"));\n    // console.log(query);\n    //   query.forEach((doc)=>{\n    //     console.log(doc.id, doc.data());\n    //   });\n  // firebase Update\n\n    // const docRef = doc(db, \"bucket\", \"BSFwZhRsVFNfpT2dJgC6\");\n    // updateDoc(docRef, {completed:\"true\"});\n  // firebase Delete\n\n  //   const docRef = doc(db, \"bucket\", \"BSFwZhRsVFNfpT2dJgC6\");\n  //   deleteDoc(docRef);\n  // },[]);\n\n  useEffect(()=>{\n    dispatch(bucketFirebase());\n    // console.log(bucket_data);\n  },[]);\n  const myRef = useRef(null);\n  const dispatch = useDispatch();\n  const addList = async() => {\n    const value = myRef.current.value;\n    // setBucketList([...BucketList, value]);\n    dispatch(createBucket({ text: value, completed: \"false\" }));\n  };\n  return (\n    <div className=\"App\">\n      <h1>나의 버킷리스트</h1>\n      <Progress />\n      <InputStyle>\n        <input type=\"text\" ref={myRef} />\n        <button\n          onClick={() => {\n            addList();\n            myRef.current.value = \"\";\n          }}\n        >\n          올리기\n        </button>\n      </InputStyle>\n      <Routes>\n        <Route path=\"/\" element={<List />} />\n        <Route path=\"/detail/:index\" element={<Detail />} />\n      </Routes>\n      <ButtonStyled\n        onClick={() => {\n          window.scrollTo({ top: 0, left: 0, behavior: \"smooth\" });\n        }}\n      >\n        맨 위로\n      </ButtonStyled>\n    </div>\n  );\n}\n\nconst InputStyle = styled.div`\n  padding-bottom: 1em;\n  border-bottom: 1px dotted #000;\n  position: relative;\n  button {\n    background-color: #fff;\n    border: none;\n    border-right: 1px solid #ccc;\n    border-bottom: 1px solid #ccc;\n    margin-left: 5px;\n    padding: 5px;\n    border-radius: 15px;\n  }\n  button:active {\n    border: none;\n    border-top: 1px solid #ccc;\n    border-left: 1px solid #ccc;\n  }\n  input {\n    width: 60%;\n    height: 50px;\n    border: 3px dotted antiquewhite;\n    border-radius: 15px;\n    padding: 0 50px;\n    font-size: 20px;\n  }\n  input:focus {\n    outline: none;\n    border: 3px dotted skyblue;\n  }\n`;\n\nconst ButtonStyled = styled.button`\n  position: fixed;\n  z-index:9999;\n  right: 1%;\n  bottom: 10%;\n  background-color: antiquewhite;\n  border: none;\n  border-right: 1px solid #ccc;\n  border-bottom: 1px solid #ccc;\n  margin-left: 5px;\n  padding: 5px;\n  border-radius: 15px;\n  :active {\n    border: none;\n    border-top: 1px solid #ccc;\n    border-left: 1px solid #ccc;\n  }\n`;\n","import { BrowserRouter } from \"react-router-dom\";\nimport { createRoot } from \"react-dom/client\";\nimport { Provider } from \"react-redux\";\nimport Store from \"./store\";\nimport App from \"./App\";\n\nconst rootElement = document.getElementById(\"root\");\nconst root = createRoot(rootElement);\n\nroot.render(\n  <Provider store={Store}>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </Provider>\n);\n"],"sourceRoot":""}