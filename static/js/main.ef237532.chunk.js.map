{"version":3,"sources":["firebase.js","Bucket.jsx","store.js","List.js","List_Tablet.js","Progress.js","App.js","index.js"],"names":["initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","db","getFirestore","initState","list","createBucket","bucket","type","completeBucket","bucket_index","deleteBucket","loadBucket","bucket_list","addBucketFB","dispatch","addDoc","collection","docRef","bucketData","id","completeBucketFB","bucket_id","getState","doc","updateDoc","completed","Bucket","findIndex","b","deleteBucketFB","deleteDoc","middlewares","thunk","rootReducer","combineReducers","state","action","new_list","map","l","idx","filter","enhancer","applyMiddleware","store","createStore","List","today","Date","getMonth","getDate","useDispatch","data","useSelector","MyUl","index","className","date","StyledList","text","StyledButton","onClick","styled","ul","button","p","props","useNavigate","Progress","count","Container","View","width","length","Dot","div","App","timeRef","useRef","dayRef","useState","setText","myRef","dateRef","useEffect","time","timeSet","timeHours","timeSec","hours","min","timer","setInterval","todayHours","getHours","todayMin","getMinutes","todaySec","getSeconds","parseInt","current","innerHTML","clearInterval","isTablet","useMediaQuery","query","getDocs","bucket_data","forEach","push","addList","value","HeaderStyle","ref","InputStyle","placeholder","onChange","e","target","textCheck","alert","List_Tablet","ButtonStyled","window","scrollTo","top","left","behavior","header","rootElement","document","getElementById","createRoot","render","Store"],"mappings":"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","file":"static/js/main.ef237532.chunk.js","sourcesContent":["// Import the functions you need from the SDKs you need\nimport { initializeApp } from \"firebase/app\";\nimport { getFirestore } from \"firebase/firestore\";\n// TODO: Add SDKs for Firebase products that you want to use\n// https://firebase.google.com/docs/web/setup#available-libraries\n\n// Your web app's Firebase configuration\n// For Firebase JS SDK v7.20.0 and later, measurementId is optional\nconst firebaseConfig = {\n  apiKey: \"AIzaSyA164JgPTgcAXiHvSiABj-E1cg4I-O42Uo\",\n  authDomain: \"my-portfolio-ed3e0.firebaseapp.com\",\n  projectId: \"my-portfolio-ed3e0\",\n  storageBucket: \"my-portfolio-ed3e0.appspot.com\",\n  messagingSenderId: \"550988259321\",\n  appId: \"1:550988259321:web:f55120553fc4b4b2e2a728\",\n  measurementId: \"G-W836BGF05L\"\n};\ninitializeApp(firebaseConfig);\n// Initialize Firebase\nexport const db = getFirestore();","// bucket.js\nimport { db  } from \"./firebase\";\nimport { collection,getDocs, addDoc, updateDoc, doc, deleteDoc } from \"firebase/firestore\";\nconst initState = {\n  list: [\n    // { text: \"혼자 여행 하기\", completed: \"false\" },\n    // { text: \"해외 여행 하기\", completed: \"false\" },\n    // { text: \"고양이 키우기\", completed: \"false\" }\n  ]\n};\n// Actions\nconst LOAD = \"bucket/LOAD\";\nconst CREATE = \"bucket/CREATE\";\nconst COMPLETE = \"bucket/COMPLETE\";\nconst RETRY = \"bucket/RETRY\";\nconst DELETE = \"bucket/DELETE\";\n\n// Action Creators\nexport function createBucket(bucket) {\n  return { type: CREATE, bucket: bucket };\n}\nexport function completeBucket(bucket_index) {\n  return { type: COMPLETE, bucket_index };\n}\nexport function retryBucket(bucket_index) {\n  return {type: RETRY , bucket_index};\n}\nexport function deleteBucket(bucket_index) {\n  return { type: DELETE, bucket_index };\n}\nexport function loadBucket (bucket_list){\n  return{type:LOAD, bucket_list};\n}\n\n//middleweares\nexport const loadBucketFB = ()=>{\n  return async function (dispatch){\n    const bucket_data = await getDocs(collection(db, \"bucket\"));\n    let bucket_list = [];\n    bucket_data.forEach((b)=>{\n      // bucket_list = [...bucket_list, {...b.data()}];\n      bucket_list.push({id:b.id,  ...b.data()});\n    });\n    dispatch(loadBucket(bucket_list));\n  }\n}\n\nexport const addBucketFB = (bucket) => {\n  return async function (dispatch) {\n  const docRef = await addDoc(collection(db, \"bucket\"),bucket);\n  // const _bucket = await getDoc (docRef);  \n  const bucketData = {id: docRef.id, ...bucket};\n// console.log(docRef);\n  dispatch(createBucket(bucketData)) ;\n  }\n}\nexport const completeBucketFB = (bucket_id) => {\n  return async  function (dispatch, getState) {\n    const docRef = doc(db, \"bucket\", bucket_id);\n   await updateDoc(docRef, {completed:true});\n  //  console.log(getState().Bucket);\n   const bucket_list = getState().Bucket.list;\n   const bucket_index = bucket_list.findIndex((b)=>{\n    return b.id === bucket_id;\n   })\n   dispatch(completeBucket(bucket_index));\n  }\n}\nexport const retryBucketFB = (bucket_id) => {\n  return async  function (dispatch, getState) {\n    const docRef = doc(db, \"bucket\", bucket_id);\n   await updateDoc(docRef, {completed:false});\n   const bucket_list = getState().Bucket.list;\n   const bucket_index = bucket_list.findIndex((b)=>{\n    return b.id === bucket_id;\n   })\n   dispatch(retryBucket(bucket_index));\n  }\n}\nexport const deleteBucketFB = (bucket_id)=> {\n  return async function (dispatch, getState){\n    const docRef = doc(db, \"bucket\", bucket_id);\n    await deleteDoc(docRef);\n    const bucket_list = getState().Bucket.list;\n    const bucket_index = bucket_list.findIndex((b)=>{\n     return b.id === bucket_id;\n    })\n    dispatch(deleteBucket(bucket_index));\n  }\n}\n// Reducer\nexport default function reducer(state = initState, action = {}) {\n  switch (action.type) {\n    case \"bucket/CREATE\": {\n      const new_list = [...state.list, action.bucket];\n      return { list: new_list };\n    }\n    case \"bucket/COMPLETE\": {\n      const new_list = state.list.map((l, idx) => {\n        if (action.bucket_index === idx) {\n          return { ...l, completed:true };\n        } else {\n          return l; \n        }\n      });\n      return { list: new_list };\n    }\n    case \"bucket/RETRY\": {\n      const new_list = state.list.map((l, idx) => {\n        if (action.bucket_index === idx) {\n          return { ...l, completed:false };\n        } else {\n          return l; \n        }\n      });\n      return { list: new_list };\n    }\n    case \"bucket/DELETE\": {\n      const new_list = state.list.filter((l, idx) => {\n        return action.bucket_index !== idx;\n      });\n      return { list: new_list };\n    }\n    case \"bucket/LOAD\":{\n      return {list: action.bucket_list}\n    }\n    default:\n      return state;\n  }\n}\n","import { createStore, combineReducers,applyMiddleware, compose } from \"redux\";\nimport Bucket from \"./Bucket\";\nimport thunk from \"redux-thunk\";\n\nconst middlewares=[thunk];\nconst rootReducer = combineReducers({ Bucket });\nconst enhancer = applyMiddleware(...middlewares);\nconst store = createStore(rootReducer, enhancer);\n\nexport default store;\n","import React, {useEffect, useRef} from \"react\";\nimport styled from \"styled-components\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { completeBucketFB, deleteBucketFB, retryBucketFB } from \"./Bucket\";\n\n\nconst List =() => {\n  const today = new Date();\n  const month = today.getMonth()+1;\n  const day = today.getDate();\n  const dispatch = useDispatch();\n  const data = useSelector((state) => state.Bucket.list);\n  return (\n    <MyUl>\n      {data.map((list, index) => {\n        return (\n          <li key={index}>\n            <div className=\"date\">작성 날짜 : {list.date}</div>\n            <StyledList\n              completed={list.completed}>{list.text}\n            </StyledList>\n         <div>\n         <StyledButton\n              onClick={() => {\n                dispatch(deleteBucketFB (data[index].id ));\n              }}\n            >\n              삭제\n            </StyledButton>\n            <StyledButton\n              onClick={() => {\n                // dispatch(completeBucket(index));\n                dispatch(completeBucketFB(data[index].id));\n              }}\n            >\n              완료\n            </StyledButton>\n         </div>\n          </li>\n        );\n      })}\n    </MyUl>\n  );\n};\nexport default List;\n\nconst MyUl = styled.ul`\n  margin: 0;\n  display: flex;\n  flex-direction: column-reverse;\n  li {\n    display: flex;\n    justify-content: space-evenly;\n    border-bottom: 1px solid #ccc;\n    border-radius:15px;\n    margin: 0;\n    margin-bottom: 1em;\n    padding: 1em;\n    font-size: 0.9em;\n    list-style-type: none;\n    text-align: left;\n    background-color:skyblue;\n    position:relative;\n      .date{\n        display:flex;\n        align-items:center;\n      }\n      .timer{\n        display:flex;\n        align-items:center;\n        padding-left:5px;\n      }\n  }\n`;\n\nconst StyledButton = styled.button`\n  background-color: #fff;\n  border: none;\n  border-right: 1px solid #ccc;\n  border-bottom: 1px solid #ccc;\n  margin-left:30px;\n  padding: 10px;\n  border-radius: 15px;\n  :active {\n    border: none;\n    border-top: 1px solid #ccc;\n    border-left: 1px solid #ccc;\n  }\n`;\nconst StyledList = styled.p`\n  width: 60%;\n  height: 2rem;\n  text-align: center;\n  background-color: ${(props) =>\n    props.completed === true ? \"#ccc\" : \"antiquewhite\"};\n  text-decoration: ${(props) => (props.completed === true ? \"line-through\" : \"none\")};\n  line-height: 2rem;\n  font-size: 1rem;\n  position:relative;\n  span{\n    position:absolute;\n    right:0;\n    font-size:.7rem;\n    padding-right:100px;\n  }\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { useNavigate } from \"react-router-dom\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { completeBucketFB, deleteBucketFB, retryBucketFB } from \"./Bucket\";\n\n\nconst List =() => {\n  const dispatch = useDispatch();\n  const data = useSelector((state) => state.Bucket.list);\n  let navigate = useNavigate();\n  return (\n    <MyUl>\n      {data.map((list, index) => {\n        return (\n          <li key={index}>\n            <div className=\"date\">작성 날짜 : {list.date}</div>\n            <StyledList\n              completed={list.completed}>{list.text}\n            </StyledList>\n         <div>\n         <StyledButton\n              onClick={() => {\n                dispatch(deleteBucketFB (data[index].id ));\n              }}\n            >\n              삭제\n            </StyledButton>\n            <StyledButton\n              onClick={() => {\n                // dispatch(completeBucket(index));\n                dispatch(completeBucketFB(data[index].id));\n              }}\n            >\n              완료\n            </StyledButton>\n         </div>\n          </li>\n        );\n      })}\n    </MyUl>\n  );\n};\nexport default List;\n\nconst MyUl = styled.ul`\n  margin: 0;\n  display: flex;\n  flex-direction: column-reverse;\n  li {\n    display: flex;\n    flex-direction:column;\n    justify-content:center;\n    align-items:center;\n    border-bottom: 1px solid #ccc;\n    border-radius:15px;\n    margin: 0;\n    margin-bottom: 1em;\n    padding: 1em;\n    font-size: 1em;\n    list-style-type: none;\n    text-align: left;\n    background-color:skyblue;\n    position:relative;\n      .date{\n        display:flex;\n        align-items:center;\n      }\n  }\n`;\n\nconst StyledButton = styled.button`\n  background-color: #fff;\n  border: none;\n  border-right: 1px solid #ccc;\n  border-bottom: 1px solid #ccc;\n  margin:1rem;\n  padding: 10px;\n  border-radius: 15px;\n  :active {\n    border: none;\n    border-top: 1px solid #ccc;\n    border-left: 1px solid #ccc;\n  }\n`;\nconst StyledList = styled.p`\n  width: 80%;\n  height: 2rem;\n  text-align: center;\n  margin-top:.5rem;\n  background-color: ${(props) =>\n    props.completed === true ? \"#ccc\" : \"antiquewhite\"};\n  text-decoration: ${(props) => (props.completed === true ? \"line-through\" : \"none\")};\n  line-height: 2rem;\n  font-size: 1rem;\n  position:relative;\n  span{\n    position:absolute;\n    right:0;\n    font-size:.7rem;\n    padding-right:100px;\n  }\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { useSelector } from \"react-redux\";\nconst Progress = () => {\n  const data = useSelector((state) => state.Bucket.list);\n  let count = 0;\n  data.map((b) => {\n    if (b.completed === true) {\n      count++;\n    }\n  });\n  return (\n    <Container>\n      <View width={(count / data.length) * 100 + \"%\"}></View>\n      <Dot></Dot>\n      <span>{(count / data.length) * 100+ \"%\" }</span>\n    </Container>\n  );\n};\nexport default Progress;\n\nconst Container = styled.div`\n  width: 90%;\n  margin: 0 auto 1rem;\n  height: 15px;\n  border-radius: 15px;\n  background: #fdfdfd;\n  display: flex;\n    span{\n      padding-left:10px;\n    }\n`;\nconst View = styled.div`\n  transition: 0.5s ease-in-out;\n  width: ${(props) => props.width};\n  height: 15px;\n  background-color: skyblue;\n`;\nconst Dot = styled.div`\n  display: block;\n  width: 20px;\n  height: 20px;\n  border-radius: 50%;\n  border: 3px solid skyblue;\n  margin: -5px -5px -5px -10px;\n  background-color: #fff;\n`;\n","import \"./styles.css\";\nimport List from \"./List\";\nimport List_Tablet from \"./List_Tablet\";\nimport React, { useRef,useEffect,useState } from \"react\";\nimport styled from \"styled-components\";\nimport { useDispatch } from \"react-redux\";\nimport Progress from \"./Progress\";\nimport { addBucketFB,loadBucketFB,completeBucketFB  } from \"./Bucket\";\nimport { useMediaQuery } from \"react-responsive\";\n\nexport default function App() {\n  const timeRef = useRef(null);\n  const dayRef = useRef(null);\n  const [text , setText] = useState(\"\");\n  const myRef = useRef(null);\n  const dateRef = useRef(null);\n  const dispatch = useDispatch();\n\n  useEffect(()=>{\n    let time = 86400;\n    let timeSet = \"\";\n    let timeHours = \"\";\n    let timeMin = \"\";\n    let timeSec = \"\";\n\n    let hours = \"\";\n    let min = \"\";\n    if(time < 0 ){\n      time = 86400;\n     }\n   const timer = setInterval(()=>{\n      const today = new Date();\n      const todayHours = today.getHours();\n      const todayMin = today.getMinutes();\n      const todaySec = today.getSeconds();\n\n  \n        timeSet = parseInt(time/60);\n        timeHours = parseInt(timeSet/60);\n        timeMin = timeSet%60;\n        timeSec = time%60;\n        time --;\n\n        hours = timeHours - todayHours;\n        min = timeMin - todayMin;\n        \n      timeRef.current.innerHTML = `${hours<10 ? `0${hours}`:hours}시간 ${min<10 ? `0${min}`:min} 분 ${timeSec<10? `0 ${timeSec}`\n       : timeSec} 초`;\n      dayRef.current.innerHTML = `${todayHours<10 ? `AM 0${todayHours}`:todayHours > 12 ? `PM 0${todayHours-12}`\n       : `AM ${todayHours}`}:${todayMin<10 ? `0${todayMin}`:todayMin}:${todaySec<10 ? `0${todaySec}`:todaySec}`;\n    },1000);\n    return () => clearInterval(timer);\n  },[]);\n  const isTablet = useMediaQuery({\n    query:\"(min-width:980px)\"\n  });\n  useEffect(()=>{\n    dispatch(loadBucketFB ());\n  },[]);\n  const addList = async () => {\n    const value = myRef.current.value;\n    const date = dateRef.current.value;\n    dispatch(addBucketFB({date:date, text: value, completed: \"false\" }));\n  };\n  const textCheck = (e)=>{\n    setText(e.target.value);\n  }\n  return (\n    <div className=\"App\">\n      <HeaderStyle>\n        <h1>매일쓰는 계획표</h1>\n        <div className=\"timer\">\n          <div>현재 시간 : <span ref={dayRef}></span> </div>\n          <div>오늘 남은시간 : <span ref={timeRef}></span> </div>\n        </div>\n\n      </HeaderStyle>\n      <Progress />\n      <InputStyle isTablet={isTablet}>\n        <input type=\"date\" ref={dateRef}/>\n        <input type=\"text\" ref={myRef} placeholder=\"오늘의 계획을 적어주세요\" value={text} onChange={(e)=>{\n          textCheck(e)\n          }}/>\n        <button\n          onClick={() => {\n            if(text !== \"\"){\n              addList();\n              setText('');\n            }\n            else{\n              alert('도전을 작성해 주세요')\n            }\n          }}\n        >\n          올리기\n        </button>\n      </InputStyle>\n      {isTablet ? <List/>:<List_Tablet/>}\n      <ButtonStyled\n        onClick={() => {\n          window.scrollTo({ top: 0, left: 0, behavior: \"smooth\" });\n        }}\n      >\n        맨 위로\n      </ButtonStyled>\n    </div>\n  );\n}\n\nconst HeaderStyle = styled.header`\n  h1 {\n    width: 100%;\n    border-radius: 15px;\n    font-size: 1.4em;\n    margin: 0 auto 1rem;\n    color: antiquewhite;\n    background-color: skyblue;\n    padding: 0.4rem 0;\n  }\n  div.timer{\n    display:flex;\n    justify-content:space-evenly;\n    color:skyblue;\n    font-size: 1.4em;\n    padding:1rem;\n  }\n`;\nconst InputStyle = styled.div`\n  padding-bottom: 1em;\n  border-bottom: 1px dotted #000;\n  margin-bottom:1em;\n  position: relative;\n  button {\n    width:50px;\n    height:50px;\n    position:${props=>props.isTablet ? \"\":\"absolute\"};\n    top:75px;\n    right:5%;\n    background-color: antiquewhite;\n    border: none;\n    border-right: 1px solid #ccc;\n    border-bottom: 1px solid #ccc;\n    margin-left: 2rem;\n    padding: 5px;\n    border-radius: 15px;\n  }\n  button:active {\n    border: none;\n    border-top: 1px solid #ccc;\n    border-left: 1px solid #ccc;\n  }\n  input {\n    width: 70%;\n    height: 50px;\n    border: 3px dotted antiquewhite;\n    border-radius: 15px;\n    padding: 0 50px;\n    margin-bottom:1rem;\n    font-size: 20px;\n  }\n  input:focus {\n    outline: none;\n    border: 3px dotted skyblue;\n  }\n`;\n\nconst ButtonStyled = styled.button`\nwidth:50px;\nheight:50px;\n  position: fixed;\n  z-index:9999;\n  right: 1%;\n  bottom: 10%;\n  background-color: antiquewhite;\n  border: none;\n  border-right: 1px solid #ccc;\n  border-bottom: 1px solid #ccc;\n  margin-left: 5px;\n  padding: 5px;\n  border-radius: 15px;\n  :active {\n    border: none;\n    border-top: 1px solid #ccc;\n    border-left: 1px solid #ccc;\n  }\n`; ","import { BrowserRouter } from \"react-router-dom\";\nimport { createRoot } from \"react-dom/client\";\nimport { Provider } from \"react-redux\";\nimport Store from \"./store\";\nimport App from \"./App\";\n\nconst rootElement = document.getElementById(\"root\");\nconst root = createRoot(rootElement);\n\nroot.render(\n  <Provider store={Store}>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </Provider>\n);\n"],"sourceRoot":""}